{
	"info": {
		"_postman_id": "06b380ea-dcd0-4927-81dd-aba2f26a37b1",
		"name": "API - ACCESO A DATOS",
		"description": "## Acerca de:\nEsta sencilla API con usos docentes será utilizada para consumir y manipular información en Acceso a Datos mediante REST o GraphQL usando distintos clientes. de esta manera podrás ver como funcionan estas dos modalidades de consumir datos bajo un servicio web y decidir cuál de ellas se adapta mejor a tus proyectos, puedes elegir entre las dos, o las dos a la vez según tus necesidades.\n\n![imagen](https://cdn.sanity.io/images/ay6gmb6r/production/040066ba6fde77015018ce05547a8b269e13b535-2240x1260.png)\n\n## Repositorio\nLa API la tienes disponible en: https://github.com/joseluisgs/api-acceso-datos\n\n## El problema\n\n### Relaciones\n- Un Departamento tiene una  lista de programadores (uno a muchos). Además tiene un programador que es Jefe de dicho Departamento (uno a uno)\n- Los Programadores pertenecen a un departamento (muchos a uno), tiene un perfil (FrontEnd, BackEnd o FullStack) y domina una lista de lenguajes: Java, TypeScript, NodeJS, VueJS).\n\n#### Departamento\n- id: ID! (uuidv4)\n- nombre: String! Nombre del Departamento\n- presupuesto: Float! Presupuesto anula asignado\n- jefe: Programador! Relación con Programador 1-1: id de Programador que dirige el Departamento\n- programadores: [Programador] Lista de id de Programadores que están asociados al Departamento\n\n#### Programador\n- id: ID! (uuidv4)\n- nombre: String! Nombre del programador\n- experiencia: Int! Años de experiencia\n- salario: Float! Salario anual recibido\n- perfil: Perfil! (FullStack, BackEnd, o FrontEnd)\n- departamento: String! Relación con Departamento, id deDepartamento.\n- fechaAlta: DateTime! Fecha de alta en nuestra empresa\n- lenguajes: Lista de lenguajes que domina: Java, TypeScript, NodeJS, VueJS\n\n\n## Consumo de la API\nPuedes consumir esta API usando un cliente REST o GraphQL que desees.\n\n![imagen2](https://cdn.cosmicjs.com/7d9a6f90-7080-11eb-87a2-9be5e90cdf74-GraphQLvsRest.png)\n\n### Cliente GraphQL - Apollo Client\nPuedes usar el propio cliente Apollo para hacer tus consultas desde el endpoint de la API: http://url:port/graphql, por ejemplo: http://localhost:4000/graphql. También puedes usar Postman y el fichero con ejemplos de la carpeta postman.\n\n### Cliente REST\nPuedes usar tu cliente rest favorito para hacer tus consultas desde el endpoint de la API: http://url:port/rest, por ejemplo: http://localhost:4000/rest. También puedes usar Postman y el fichero con ejemplos de la carpeta postman.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GrapQL",
			"item": [
				{
					"name": "Departamentos",
					"item": [
						{
							"name": "GET Departamentos",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query {\n  getDepartamentos {\n    id\n    nombre\n    presupuesto\n    jefe {\n      nombre\n      experiencia\n      salario\n      perfil\n      fechaAlta\n    }\n    programadores {\n      nombre\n      experiencia\n      salario\n      perfil\n      fechaAlta\n      lenguajes\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene todos los Departamentos"
							},
							"response": []
						},
						{
							"name": "GET Departamento By ID",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query($getDepartamentoByIdId: ID!) {\n  getDepartamentoByID(id: $getDepartamentoByIdId) {\n    id\n    nombre\n    presupuesto\n    jefe {\n      nombre\n      salario\n    }\n    programadores {\n      nombre\n      perfil\n      lenguajes\n      fechaAlta\n    }\n  }\n}",
										"variables": "{\n  \"getDepartamentoByIdId\": 111\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene Departamento por su ID"
							},
							"response": []
						},
						{
							"name": "GET Programadores By Departamento ID",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query($getProgramadoresByIdId: ID!) {\n  getProgramadoresByID(id: $getProgramadoresByIdId) {\n    nombre\n    experiencia\n    salario\n    perfil\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": "{\n  \"getProgramadoresByIdId\": 111\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene los programadores asociados a un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "GET Jefe By Departamento ID",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query($getJefeByIdId: ID!) {\n  getJefeByID(id: $getJefeByIdId) {\n    nombre\n    experiencia\n    salario\n    perfil\n    fechaAlta\n    lenguajes\n    departamento\n  }\n}",
										"variables": "{\n  \"getJefeByIdId\": 111\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene el jefe asignado a un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "POST Departamento",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation Mutation($nombre: String!, $presupuesto: Float!, $idJefe: String!) {\n  addDepartamento(nombre: $nombre, presupuesto: $presupuesto, id_jefe: $idJefe) {\n    id\n    nombre\n    presupuesto\n    jefe {\n      nombre\n      experiencia\n      salario\n      perfil\n    }\n  }\n}",
										"variables": "{\n  \"nombre\": \"Departamento Insert\",\n  \"presupuesto\": 20000,\n  \"idJefe\": \"888\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Crea un nuevo departamento con sus datos básicos, pero no los programadores"
							},
							"response": []
						},
						{
							"name": "DELETE Departamento",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation DeleteDepartamentoMutation($deleteDepartamentoId: ID!) {\n  deleteDepartamento(id: $deleteDepartamentoId) {\n    id\n    nombre\n    presupuesto\n    jefe {\n      nombre\n      experiencia\n      salario\n      id\n    }\n    programadores {\n      id\n      nombre\n      experiencia\n      salario\n      perfil\n    }\n  }\n}",
										"variables": "{\n  \"deleteDepartamentoId\": \"111\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Elimina un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "UPDATE Departamento",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UpdateDepartamentoMutation($updateDepartamentoId: ID!, $nombre: String!, $presupuesto: Float!, $idJefe: String!) {\n  updateDepartamento(id: $updateDepartamentoId, nombre: $nombre, presupuesto: $presupuesto, id_jefe: $idJefe) {\n    id\n    nombre\n    presupuesto\n    jefe {\n      nombre\n      experiencia\n      salario\n    }\n    programadores {\n      nombre\n      experiencia\n      salario\n      lenguajes\n    }\n  }\n}",
										"variables": "{\n  \"updateDepartamentoId\": \"111\",\n  \"nombre\": \"Departamento Update\",\n  \"presupuesto\": 30000,\n  \"idJefe\": \"111\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Actualiza los datos de un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "UPDATE Añadir Programador a Departamento",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation AddProgramadorDepartamentoMutation($addProgramadorDepartamentoId: ID!, $idProgramador: String!) {\n  addProgramadorDepartamento(id: $addProgramadorDepartamentoId, id_programador: $idProgramador) {\n    id\n    nombre\n    presupuesto\n    jefe {\n      nombre\n      experiencia\n      salario\n    }\n    programadores {\n      nombre\n      experiencia\n      salario\n      perfil\n      id\n      departamento\n    }\n  }\n}",
										"variables": "{\n  \"addProgramadorDepartamentoId\": \"111\",\n  \"idProgramador\": \"888\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Añade un programador a un departamento dado el ID del departamento y el ID del Programador"
							},
							"response": []
						},
						{
							"name": "UPDATE Eliminar Programador a Departamento",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation RemoveProgramadorDepartamentoMutation($removeProgramadorDepartamentoId: ID!, $idProgramador: String!) {\n  removeProgramadorDepartamento(id: $removeProgramadorDepartamentoId, id_programador: $idProgramador) {\n    id\n    nombre\n    presupuesto\n    jefe {\n      nombre\n      experiencia\n      salario\n    }\n    programadores {\n      id\n      nombre\n      experiencia\n      departamento\n    }\n  }\n}",
										"variables": "{\n  \"removeProgramadorDepartamentoId\": \"111\",\n  \"idProgramador\": \"222\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Elimina un programador asociado a un departamento dado en ID del Departamento y el ID del Programador"
							},
							"response": []
						}
					],
					"description": "Colecciones de consultas sobre Departamentos"
				},
				{
					"name": "Programadores",
					"item": [
						{
							"name": "GET Programadores",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query {\n  getProgramadores {\n    nombre\n    experiencia\n    salario\n    perfil\n    departamento\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene todos los Programadores"
							},
							"response": []
						},
						{
							"name": "GET Programador By ID",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query($getProgramadorByIdId: ID!) {\n  getProgramadorByID(id: $getProgramadorByIdId) {\n    id\n    nombre\n    experiencia\n    salario\n    perfil\n    departamento\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": "{\n  \"getProgramadorByIdId\": 111\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene un programador dado su ID"
							},
							"response": []
						},
						{
							"name": "GET Programadores By Departamento ID ",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query($departamentoId: String!) {\n  getProgramadoresByDepartamentoID(departamentoID: $departamentoId) {\n    id\n    nombre\n    experiencia\n    salario\n    perfil\n    departamento\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": "{\n  \"departamentoId\": \"222\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene los programadores asociados a un departamento dado el ID del departamento"
							},
							"response": []
						},
						{
							"name": "GET Programadores By Perfil",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query($perfil: String!) {\n  getProgramadoresByPerfil(perfil: $perfil) {\n    id\n    nombre\n    experiencia\n    salario\n    perfil\n    departamento\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": "{\n  \"perfil\": \"FullStack\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene la lista de programadores dado un perfil"
							},
							"response": []
						},
						{
							"name": "GET Programadores By Lenguaje",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Query($lenguaje: String!) {\n  getProgramadoresByLenguaje(lenguaje: $lenguaje) {\n    id\n    nombre\n    experiencia\n    salario\n    perfil\n    departamento\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": "{\n  \"lenguaje\": \"VueJS\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Obtiene la lista de programadores que dominan un lenguaje dado"
							},
							"response": []
						},
						{
							"name": "POST Empleado",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation AddProgramadorMutation($nombre: String!, $experiencia: Int!, $salario: Float!, $perfil: Perfil!, $departamentoId: String!, $fechaAlta: DateTime!, $lenguajes: [Lenguaje!]!) {\n  addProgramador(nombre: $nombre, experiencia: $experiencia, salario: $salario, perfil: $perfil, departamento_id: $departamentoId, fechaAlta: $fechaAlta, lenguajes: $lenguajes) {\n    id\n    nombre\n    experiencia\n    salario\n    perfil\n    departamento\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": "{\n  \"nombre\": \"Programador Prueba\",\n  \"experiencia\": 2,\n  \"salario\": 30000,\n  \"perfil\": \"FullStack\",\n  \"departamentoId\": \"333\",\n  \"fechaAlta\": \"2021-10-23T18:25:43.511Z\",\n  \"lenguajes\": [\"Java\", \"TypeScript\"]\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Crea un nuevo programador con sus datos básicos"
							},
							"response": []
						},
						{
							"name": "DELETE Programador",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation DeleteProgramadorMutation($deleteProgramadorId: ID!) {\n  deleteProgramador(id: $deleteProgramadorId) {\n    id\n    nombre\n    experiencia\n    salario\n    perfil\n    departamento\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": "{\n  \"deleteProgramadorId\": \"222\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Elimina un programador dado su ID"
							},
							"response": []
						},
						{
							"name": "UPDATE Empleado",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UpdateProgramadorMutation($updateProgramadorId: ID!, $nombre: String!, $experiencia: Int!, $salario: Float!, $perfil: Perfil!, $departamentoId: String!, $fechaAlta: DateTime!, $lenguajes: [Lenguaje!]!) {\n  updateProgramador(id: $updateProgramadorId, nombre: $nombre, experiencia: $experiencia, salario: $salario, perfil: $perfil, departamento_id: $departamentoId, fechaAlta: $fechaAlta, lenguajes: $lenguajes) {\n    id\n    nombre\n    experiencia\n    salario\n    perfil\n    departamento\n    fechaAlta\n    lenguajes\n  }\n}",
										"variables": "{\n  \"updateProgramadorId\": \"888\",\n  \"nombre\": \"Programador Update\",\n  \"experiencia\": 3,\n  \"salario\": 3000,\n  \"perfil\": \"FullStack\",\n  \"departamentoId\": \"222\",\n  \"fechaAlta\": \"2021-10-23T18:25:43.511Z\",\n  \"lenguajes\": [\"Java\", \"TypeScript\"]\n}"
									}
								},
								"url": {
									"raw": "http://localhost:4000/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"graphql"
									]
								},
								"description": "Actualiza los datos de un programador dado su ID"
							},
							"response": []
						}
					],
					"description": "Colecciones de consulta sobre Programadores"
				},
				{
					"name": "hello",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Query {\n  hello\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:4000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"graphql"
							]
						},
						"description": "Función de saludo de la API GraphQL"
					},
					"response": []
				}
			],
			"description": "## Acerca De\nAPI GraphQL con las siguientes características. \n- Un Departamento tiene una  lista de programadores (uno a muchos). Además tiene un programador que es Jefe de dicho Departamento (uno a uno)\n- Los Programadores pertenecen a un departamento (muchos a uno), tiene un perfil (FrontEnd, BackEnd o FullStack) y domina una lista de lenguajes: Java, TypeScript, NodeJS, VueJS).\n\n## Departamento\n- id: ID! (uuidv4)\n- nombre: String! Nombre del Departamento\n- presupuesto: Float! Presupuesto anula asignado\n- jefe: Programador! Relación con Programador 1-1: id de Programador que dirige el Departamento\n- programadores: [Programador] Lista de id de Programadores que están asociados al Departamento\n\n## Programador\n- id: ID! (uuidv4)\n- nombre: String! Nombre del programador\n- experiencia: Int! Años de experiencia\n- salario: Float! Salario anual recibido\n- perfil: Perfil! (FullStack, BackEnd, o FrontEnd)\n- departamento: String! Relación con Departamento, id deDepartamento.\n- fechaAlta: DateTime! Fecha de alta en nuestra empresa\n- lenguajes: Lista de lenguajes que domina: Java, TypeScript, NodeJS, VueJS"
		},
		{
			"name": "REST",
			"item": [
				{
					"name": "Departamento",
					"item": [
						{
							"name": "GET Departamentos",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/departamento",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento"
									]
								},
								"description": "Obtiene todos los Departamentos"
							},
							"response": []
						},
						{
							"name": "GET Departamento By ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/departamento/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento",
										"111"
									]
								},
								"description": "Obtiene un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "GET Programadores By Departamento ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/departamento/111/programadores",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento",
										"111",
										"programadores"
									]
								},
								"description": "Obtiene los programadores asociados a un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "GET Jefe By Departamento ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/departamento/111/jefe",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento",
										"111",
										"jefe"
									]
								},
								"description": "Obtiene el jefe asignado a un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "POST Departamento",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Departamento Insert\",\n    \"presupuesto\": \"20000\",\n    \"id_jefe\": \"111\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/rest/departamento/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento",
										""
									]
								},
								"description": "Crea un nuevo departamento con sus datos básicos, pero no los programadores"
							},
							"response": []
						},
						{
							"name": "DELETE Departamento",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/departamento/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento",
										"111"
									]
								},
								"description": "Elimina un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "UPDATE Departamento",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Departamento Update\",\n    \"presupuesto\": \"20000\",\n    \"id_jefe\": \"111\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/rest/departamento/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento",
										"111"
									]
								},
								"description": "Actualiza los datos de un departamento dado su ID"
							},
							"response": []
						},
						{
							"name": "UPDATE Añadir Programador a Departamento",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id_programador\": \"888\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/rest/departamento/111/add_programador/888",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento",
										"111",
										"add_programador",
										"888"
									]
								},
								"description": "Añade un programador a un departamento dado el ID del departamento y el ID del Programador"
							},
							"response": []
						},
						{
							"name": "UPDATE Eliminar Programador a Departamento",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id_programador\": \"888\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/rest/departamento/111/remove_programador/222",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"departamento",
										"111",
										"remove_programador",
										"222"
									]
								},
								"description": "Elimina un programador asociado a un departamento dado en ID del Departamento y el ID del Programador"
							},
							"response": []
						}
					],
					"description": "Consultas sobre Departamentos"
				},
				{
					"name": "Programadores",
					"item": [
						{
							"name": "GET Programadores",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/programador",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"programador"
									]
								},
								"description": "Obtiene todos los Programadores"
							},
							"response": []
						},
						{
							"name": "GET Programador By ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/programador/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"programador",
										"111"
									]
								},
								"description": "Obtiene un programador dado su ID"
							},
							"response": []
						},
						{
							"name": "GET Programadores By Departamento ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/programador/departamento/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"programador",
										"departamento",
										"111"
									]
								},
								"description": "Obtiene los programadores asociados a un departamento dado el ID del departamento"
							},
							"response": []
						},
						{
							"name": "GET Programadores By Perfil",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/programador/perfil/FullStack",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"programador",
										"perfil",
										"FullStack"
									]
								},
								"description": "Obtiene la lista de programadores dado un perfil"
							},
							"response": []
						},
						{
							"name": "GET Programadores By Lenguaje",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/programador/lenguaje/VueJS",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"programador",
										"lenguaje",
										"VueJS"
									]
								},
								"description": "Obtiene la lista de programadores que dominan un lenguaje dado"
							},
							"response": []
						},
						{
							"name": "POST Programador",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Departamento Insert\",\n    \"experiencia\": 2,\n    \"salario\": 200000,\n    \"perfil\": \"FullStack\",\n    \"departamento_id\": \"222\",\n    \"fechaAlta\": \"2021-10-23T18:25:43.511Z\",\n    \"lenguajes\": [\"Java\", \"TypeScript\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/rest/programador/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"programador",
										""
									]
								},
								"description": "Crea un nuevo programador con sus datos básicos"
							},
							"response": []
						},
						{
							"name": "DELETE Programador",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/rest/programador/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"programador",
										"111"
									]
								},
								"description": "Elimina un programador dado su ID"
							},
							"response": []
						},
						{
							"name": "UPDATE Programador",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Departamento Update\",\n    \"experiencia\": 2,\n    \"salario\": 200000,\n    \"perfil\": \"FullStack\",\n    \"departamento_id\": \"222\",\n    \"fechaAlta\": \"2021-10-23T18:25:43.511Z\",\n    \"lenguajes\": [\"Java\", \"TypeScript\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/rest/programador/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"rest",
										"programador",
										"111"
									]
								},
								"description": "Actualiza los datos de un programador dado su ID"
							},
							"response": []
						}
					],
					"description": "Consulta sobre Programadores"
				},
				{
					"name": "hello",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/rest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"rest"
							]
						},
						"description": "Función de saludo de la API REST"
					},
					"response": []
				}
			],
			"description": "## Acerca De\nAPI REST con las siguientes características. \n- Un Departamento tiene una  lista de programadores (uno a muchos). Además tiene un programador que es Jefe de dicho Departamento (uno a uno)\n- Los Programadores pertenecen a un departamento (muchos a uno), tiene un perfil (FrontEnd, BackEnd o FullStack) y domina una lista de lenguajes: Java, TypeScript, NodeJS, VueJS).\n\n## Departamento\n- id: ID! (uuidv4)\n- nombre: String! Nombre del Departamento\n- presupuesto: Float! Presupuesto anula asignado\n- jefe: Programador! Relación con Programador 1-1: id de Programador que dirige el Departamento\n- programadores: [Programador] Lista de id de Programadores que están asociados al Departamento\n\n## Programador\n- id: ID! (uuidv4)\n- nombre: String! Nombre del programador\n- experiencia: Int! Años de experiencia\n- salario: Float! Salario anual recibido\n- perfil: Perfil! (FullStack, BackEnd, o FrontEnd)\n- departamento: String! Relación con Departamento, id deDepartamento.\n- fechaAlta: DateTime! Fecha de alta en nuestra empresa\n- lenguajes: Lista de lenguajes que domina: Java, TypeScript, NodeJS, VueJS"
		}
	]
}