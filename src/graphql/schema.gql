## Mi ejemplo Departamento < -- > Programador

# Importo el tipo de dato
scalar DateTime

# Tipos de datos de esquema y sus relaciones

# Tipo Programador
type Programador {
  id: ID!
  nombre: String!
  experiencia: Int!
  salario: Float!
  perfil: Perfil!
  departamento: String! # Relación con Departamento, clave externa, evitar recursividad
  fechaAlta: DateTime!
  lenguajes: [Lenguaje!]!
}

# Departamento
type Departamento {
  id: ID!
  nombre: String!
  presupuesto: Float!
  jefe: Programador! # Relacion con Programador 1 a 1, aqui si busco el objeto
  programadores: [Programador] # Lista de Programadores 1 a muchos pero pude ser vacía
}


# Perfil de Programador
enum Perfil {
  BackEnd
  FrontEnd
  FullStack
}

# Lenguajes que domina
enum Lenguaje {
  Java
  TypeScript
  NodeJS
  VueJS
}

# Querys o puntos de entradas para consultar datos, son nuestros GET
type Query {
  hello: String

  # Departamentos
  getDepartamentos: [Departamento!]!
  getDepartamentoByID(id: ID!): Departamento
  getProgramadoresByID(id: ID!): [Programador]
  getJefeByID(id: ID!): Programador!
  ## Podriamos buscar por jefe, por presupuesto, etc...

  # Programadores
  getProgramadores: [Programador!]!
  getProgramadorByID(id: ID!): Programador
  getProgramadoresByDepartamentoID(departamentoID: String!): [Programador] #Puede ser vacío
  getProgramadoresByPerfil(perfil: String!): [Programador]
  getProgramadoresByLenguaje(lenguaje: String!): [Programador]
  ## Podriamos buscar por jefe, por presupuesto, etc...
}

# Mutaciones o punttos de entrada para modifica/mutar nuestros datos, son nuestros POT, UPDATE, PATCH y DELETE
type Mutation {
  # Departamentos
  addDepartamento(id: ID!, nombre: String!, presupuesto: Float!, id_jefe: String!): Departamento
  deleteDepartamento(id: ID!): Departamento
  updateDepartamento(id: ID!, nombre: String!, presupuesto: Float!, id_jefe: String!): Departamento
  
  # Programadores
  addProgramador(nombre: String!, experiencia: Int!, salario: Float!, perfil: Perfil!, departamento_id: String!, fechaAlta: DateTime!, lenguajes: [Lenguaje!]! ): Programador
  deleteProgramador(id: ID!): Programador
  updateProgramador(id: ID!, nombre: String!, experiencia: Int!, salario: Float!, perfil: Perfil!, departamento_id: String!, fechaAlta: DateTime!, lenguajes: [Lenguaje!]! ): Programador
}

